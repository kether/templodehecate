<?php
/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class tdhSeccionTable extends Doctrine_Table
{
  protected $opciones = array(
    'tipo'          => 'todos',
    'genero'        => null,
    'letra'         => null,
    'limite'        => null,
    'usuario_id'    => null,
    'orden'         => 'nombre'
  );
  
  public function retrieveFavoritasByUserId($userId)
  {
    return $this->createQuery('s')
      ->innerJoin('s.Tipo t')
      ->innerJoin('s.FavoritaDeUsuarios f WITH f.id = ?', $userId)
      ->execute();
  }
  
  public function autorizados()
  {
    return $this->createQuery('s')
      ->innerJoin('s.Editor e')
      ->innerJoin('s.Tipo t')
      ->innerJoin('s.Genero g')
      ->addWhere('s.estado_activa = ?', true);
  }
    
  public function popularesActuales()
  {
    return $this->autorizados()
      ->leftJoin('s.RegistrosDePopularidad p WITH p.fecha = ?', date('Y-m-d', time()-86400));
  }
  
  public function retrieveAutorizadoBySlug($slug)
  {
    return $this->autorizados()
      ->addWhere('s.slug = ?', $slug)
      ->fetchOne();
  }
  
  public function getPopularesActuales($opciones = array())
  {    
    $q = $this->popularesActuales()
      ->orderBy('p.visitas DESC')
      ->addWhere('t.es_juego = ?', true);
    
    $this->setQueryPorOpciones($q, $opciones);
      
    return $q->execute();
  }
  
  public function getPagerAutorizados($pagina = 1, $opciones = array())
  {
    $pager = new sfDoctrinePager($this->getClassnameToReturn(), 5);
    
    $pager->setPage($pagina);
    $pager->setTableMethod('autorizados');
    
    $this->setQueryPorOpciones($pager->getQuery(), $opciones);
    
    $pager->init();
    
    return $pager;
  }
  
  public function getAutorizados($limite = 0, $opciones = array())
  {
    $q = $this->autorizados();
    
    $this->setQueryPorOpciones($q, $opciones);
    
    if((integer) $limite > 0)
    {
      $q->limit($limite);
    }
    
    return $q->execute();
  }
  
  public function retrieveBackendList(Doctrine_Query $q)
  {
    $rootAlias = $q->getRootAlias();
    
    return $q
      ->innerJoin($rootAlias.'.Tipo t')
      ->innerJoin($rootAlias.'.Genero g')
      ->innerJoin($rootAlias.'.Tablon n');
  }
  
  public function retrieveArrayFormList(Doctrine_Query $q = null, $addEmpty = true)
  {
    $q = is_null($q) ? $this->createQuery() : $q;
    $rootAlias = $q->getRootAlias();
  
    $r = $q->innerJoin($rootAlias.'.Tipo t')->addOrderBy('t.es_juego DESC, t.nombre ASC, '.$rootAlias.'.nombre ASC')->execute();
    
    $secciones = array(); 
    
    if($addEmpty)
    {
      $secciones[''] = '';
    }
    
    foreach($r as $s)
    {
      $secciones[$s->getTipo()->getNombre()][$s->getId()] = $s->getNombre();
    }
    
    return $secciones;
  }
  
  public function setQueryPorOpciones(Doctrine_Query $q, $opciones = array())
  {
    $opciones = sfToolkit::arrayDeepMerge($this->opciones, $opciones);
    
    $rootAlias = $q->getRootAlias();
    
    if($opciones['genero'])
    {
      $q->addWhere('g.slug = ?', $opciones['genero']);
    }
    
    if($opciones['letra'])
    {
      if($opciones['letra'] == '#')
      {
        $q->addWhere($rootAlias.'.nombre REGEXP ?', '^[0-9]');
      }
      else
      {
        $q->addWhere($rootAlias.'.nombre LIKE ?', $opciones['letra'].'%');
      }
    }
    
    if($opciones['tipo'] != 'todos' && $opciones['tipo'])
    {
      $q->addWhere('t.slug = ?', $opciones['tipo']);
    }
    
    if(!is_null($opciones['limite']))
    {
      $q->limit($opciones['limite']);
    }
    
    if($opciones['usuario_id'])
    {
      $q->leftJoin($rootAlias.'.FavoritaDeUsuarios f WITH f.id = ?', $opciones['usuario_id']);
    }
    
    switch($opciones['orden'])
    {
      case 'popular':
        $q->leftJoin($rootAlias.'.RegistrosDePopularidad p WITH p.fecha = ?', date('Y-m-d', time()-86400))
          ->addOrderBy('p.visitas DESC')
          ->addOrderBy($rootAlias.'.nombre ASC');
        break;
      case 'ultimos':
        $q->addOrderBy($rootAlias.'.created_at DESC');
        break;
      case 'nombre':
      default:
        $q->addOrderBy($rootAlias.'.nombre ASC');
        break;
    }
    
    $q->addWhere('t.es_juego = ?', true);
  }
}