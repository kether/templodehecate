<?php

/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class tdhEvento extends BasetdhEvento implements tdhContenido
{
  protected $pagerApuntados = null;
  
  public function getMensaje()
  {
    return $this->getHilo()->getPrimerMensaje();
  }
  
  public function getTitular()
  {
    return $this->getMensaje()->getAsunto();
  }
  
  /**
   * @see tdhEvento::getTitular()
   */
  public function getEntradilla()
  {
    return $this->getTitular();
  }
  
  /**
   * Función que devolverá una imagen adecuada de eventos. 
   * 
   * @param string $tam
   * @param boolean $defecto
   * @return string
   */
  public function getImagePath($tam = 'peq', $defecto = true)
  {
    $path = tdhConfig::get('img_events_path').'/'.$this->getMensaje()->getSlug().'-'.$tam.'.jpg';
  
    if($defecto == false)
    {
      return $path;
    }
    else
    {
      return $this->hasImage($tam) ? $path : '/images/assets/cover-'.$tam.'.jpg';
    }
  }
  
  public function hasImage($tam = 'peq')
  {
    return file_exists(sfConfig::get('sf_web_dir').tdhConfig::get('img_events_path').'/'.$this->getMensaje()->getSlug().'-'.$tam.'.jpg');
  }
  
  public function getRouting($enArray = false, $sfFormat = 'html', $genUrl = false)
  {
    $ruta = '@tdh_evento?id='.$this->getId().'&slug='.$this->getMensaje()->getSlug().'&sf_format='.$sfFormat;
    
    if($genUrl)
    {
      return sfContext::getInstance()->getController()->genUrl($ruta, true);
    }
    else
    {
      return $ruta;
    }
  }
  
  public function getUrlForApp($app)
  {
    return sfProjectConfiguration::getActive()->generaUrlFromApp($app, 'tdh_evento', array(
      'id' => $this->getId(),'slug' => $this->getHilo()->getPrimerMensaje()->getSlug(), 'sf_format'=> 'html'
    ));
  }
  
  public function getRelacionados()
  {
    return Doctrine::getTable('tdhEvento')
      ->autorizados()
      ->addWhere('c.id != ?', $this->getId())
      ->orderBy('m.visible_desde DESC')->orderBy('m.created_at DESC')->orderBy('c.id DESC')
      ->limit(5)
      ->execute();
  }
  
  public function getDireccionCompleta()
  {
    return trim($this->getDireccion().' '.$this->getLocalidad().' '.$this->getRegion().' '.$this->getPaisLargo());
  }
  
  public function getDireccionCorta()
  {
    $direccion = '';
    
    if($this->getLocalidad() != '')
    {
      $direccion .= $this->getLocalidad();
      
      if($this->getRegion() != '')
      {
        $direccion .= ' ('.$this->getRegion().')';
      }
    }
    elseif($this->getRegion())
    {
      $direccion .= $this->getRegion();
      
      if($this->getPais() != '')
      {
        $direccion .= ' ('.$this->getPais().')';
      }
    }
    elseif($this->getPais() != '')
    {
      $direccion .= $this->getPaisLargo();
    }
    
    return $direccion;
  }
  
  public function getPaisLargo($culture = null)
  {
    $c = sfCultureInfo::getInstance($culture === null ? sfContext::getInstance()->getUser()->getCulture() : $culture);
    $countries = $c->getCountries();
    
    return isset($countries[$this->getPais()]) ? $countries[$this->getPais()] : '';
  }
  
  /**
   * Devuelve la duración del evento en la escala parametrizada:
   *  * d: días
   *  * s: segundos  
   * 
   * @param string $escala Escala de tiempo en el que se devolverá el resultado, por defecto en días 
   * @return integer Duración del evento
   */
  public function getDuracionEvento($escala = 'd')
  {
    $seg = strtotime($this->getFechaFin()) - strtotime($this->getFechaInicio());

    switch($escala)
    {
      case 'd':
        return ceil($seg/86400);
        break;
      case 's':
      default:
        return $seg;
        break;
    }
  }

  public function getFechaInicioDT($format = DATE_RFC2822)
  {
    $date = new DateTime($this->getFechaInicio());
    return $date->format($format);
  }
  
  public function getFechaFinDT($format = DATE_RFC2822)
  {
    $date = new DateTime($this->getFechaFin());
    return $date->format($format);
  }
  
  public function getPagerApuntados($pagina = 1, $maxPorPagina = 3)
  {
    if(!is_null($this->pagerApuntados)) return $this->pagerApuntados;
    
    $this->pagerApuntados = new sfDoctrinePager('ehAuthUser', $maxPorPagina);
    $this->pagerApuntados->setPage($pagina);

    $q = Doctrine_Query::create()->from('ehAuthUser u')
      ->innerJoin('u.Perfil p')
      ->innerJoin('u.tdhEventoApuntado a')
      ->where('a.evento_id = ?', $this->getId());
      
    $this->pagerApuntados->setQuery($q);
    $this->pagerApuntados->init();
      
    return $this->pagerApuntados;
  }
  
  public function estaApuntadoUsuarioId($usuarioId)
  {
    $c = Doctrine_Query::create()
      ->from('tdhEventoApuntado')
      ->where('usuario_id = ?', $usuarioId)
      ->addWhere('evento_id = ?', $this->getId())->count();
      
    return $c > 0 ? true : false;
  }
}