<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('tdhOauth', 'doctrine');

/**
 * BasetdhOauth
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $uid
 * @property enum $servicio
 * @property string $token
 * @property string $token_secret
 * @property integer $usuario_id
 * @property ehAuthUser $Usuario
 * 
 * @method integer    getId()           Returns the current record's "id" value
 * @method string     getUid()          Returns the current record's "uid" value
 * @method enum       getServicio()     Returns the current record's "servicio" value
 * @method string     getToken()        Returns the current record's "token" value
 * @method string     getTokenSecret()  Returns the current record's "token_secret" value
 * @method integer    getUsuarioId()    Returns the current record's "usuario_id" value
 * @method ehAuthUser getUsuario()      Returns the current record's "Usuario" value
 * @method tdhOauth   setId()           Sets the current record's "id" value
 * @method tdhOauth   setUid()          Sets the current record's "uid" value
 * @method tdhOauth   setServicio()     Sets the current record's "servicio" value
 * @method tdhOauth   setToken()        Sets the current record's "token" value
 * @method tdhOauth   setTokenSecret()  Sets the current record's "token_secret" value
 * @method tdhOauth   setUsuarioId()    Sets the current record's "usuario_id" value
 * @method tdhOauth   setUsuario()      Sets the current record's "Usuario" value
 * 
 * @package    templodehecate
 * @subpackage model
 * @author     Pablo Floriano <kether@templodehecate.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasetdhOauth extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('tdh_oauth');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('uid', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             'length' => 255,
             ));
        $this->hasColumn('servicio', 'enum', null, array(
             'type' => 'enum',
             'notnull' => true,
             'values' => 
             array(
              0 => 'facebook',
              1 => 'twitter',
              2 => 'google',
             ),
             'default' => 'google',
             ));
        $this->hasColumn('token', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             'length' => 255,
             ));
        $this->hasColumn('token_secret', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             'length' => 255,
             ));
        $this->hasColumn('usuario_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));


        $this->index('propietario', array(
             'fields' => 
             array(
              0 => 'usuario_id',
              1 => 'servicio',
             ),
             'type' => 'unique',
             ));
        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('ehAuthUser as Usuario', array(
             'local' => 'usuario_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}