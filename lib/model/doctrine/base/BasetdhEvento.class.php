<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('tdhEvento', 'doctrine');

/**
 * BasetdhEvento
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property boolean $estado_aprobado
 * @property date $fecha_inicio
 * @property date $fecha_fin
 * @property string $direccion
 * @property string $localidad
 * @property string $region
 * @property string $pais
 * @property float $latitud
 * @property float $longitud
 * @property integer $hilo_id
 * @property ehForoHilo $Hilo
 * @property Doctrine_Collection $Apuntados
 * 
 * @method integer             getId()              Returns the current record's "id" value
 * @method boolean             getEstadoAprobado()  Returns the current record's "estado_aprobado" value
 * @method date                getFechaInicio()     Returns the current record's "fecha_inicio" value
 * @method date                getFechaFin()        Returns the current record's "fecha_fin" value
 * @method string              getDireccion()       Returns the current record's "direccion" value
 * @method string              getLocalidad()       Returns the current record's "localidad" value
 * @method string              getRegion()          Returns the current record's "region" value
 * @method string              getPais()            Returns the current record's "pais" value
 * @method float               getLatitud()         Returns the current record's "latitud" value
 * @method float               getLongitud()        Returns the current record's "longitud" value
 * @method integer             getHiloId()          Returns the current record's "hilo_id" value
 * @method ehForoHilo          getHilo()            Returns the current record's "Hilo" value
 * @method Doctrine_Collection getApuntados()       Returns the current record's "Apuntados" collection
 * @method tdhEvento           setId()              Sets the current record's "id" value
 * @method tdhEvento           setEstadoAprobado()  Sets the current record's "estado_aprobado" value
 * @method tdhEvento           setFechaInicio()     Sets the current record's "fecha_inicio" value
 * @method tdhEvento           setFechaFin()        Sets the current record's "fecha_fin" value
 * @method tdhEvento           setDireccion()       Sets the current record's "direccion" value
 * @method tdhEvento           setLocalidad()       Sets the current record's "localidad" value
 * @method tdhEvento           setRegion()          Sets the current record's "region" value
 * @method tdhEvento           setPais()            Sets the current record's "pais" value
 * @method tdhEvento           setLatitud()         Sets the current record's "latitud" value
 * @method tdhEvento           setLongitud()        Sets the current record's "longitud" value
 * @method tdhEvento           setHiloId()          Sets the current record's "hilo_id" value
 * @method tdhEvento           setHilo()            Sets the current record's "Hilo" value
 * @method tdhEvento           setApuntados()       Sets the current record's "Apuntados" collection
 * 
 * @package    templodehecate
 * @subpackage model
 * @author     Pablo Floriano <kether@templodehecate.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasetdhEvento extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('tdh_evento');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('estado_aprobado', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => true,
             ));
        $this->hasColumn('fecha_inicio', 'date', null, array(
             'type' => 'date',
             'notnull' => true,
             ));
        $this->hasColumn('fecha_fin', 'date', null, array(
             'type' => 'date',
             'notnull' => true,
             ));
        $this->hasColumn('direccion', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             'length' => 255,
             ));
        $this->hasColumn('localidad', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             'length' => 255,
             ));
        $this->hasColumn('region', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             'length' => 255,
             ));
        $this->hasColumn('pais', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             'length' => 255,
             ));
        $this->hasColumn('latitud', 'float', null, array(
             'type' => 'float',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('longitud', 'float', null, array(
             'type' => 'float',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('hilo_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));

        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('ehForoHilo as Hilo', array(
             'local' => 'hilo_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('ehAuthUser as Apuntados', array(
             'refClass' => 'tdhEventoApuntado',
             'local' => 'evento_id',
             'foreign' => 'usuario_id',
             'onDelete' => 'CASCADE',
             'onUpdate' => 'CASCADE'));
    }
}