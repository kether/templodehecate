<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('tdhAsociacion', 'doctrine');

/**
 * BasetdhAsociacion
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $nombre
 * @property integer $num_socios
 * @property string $direccion
 * @property string $localidad
 * @property string $region
 * @property string $pais
 * @property string $web
 * @property integer $plazas_abiertas
 * @property enum $acepta_invitaciones
 * @property integer $tipo_id
 * @property tdhAsociacionTipo $Tipo
 * @property Doctrine_Collection $Socios
 * @property Doctrine_Collection $Invitaciones
 * 
 * @method integer             getId()                  Returns the current record's "id" value
 * @method string              getNombre()              Returns the current record's "nombre" value
 * @method integer             getNumSocios()           Returns the current record's "num_socios" value
 * @method string              getDireccion()           Returns the current record's "direccion" value
 * @method string              getLocalidad()           Returns the current record's "localidad" value
 * @method string              getRegion()              Returns the current record's "region" value
 * @method string              getPais()                Returns the current record's "pais" value
 * @method string              getWeb()                 Returns the current record's "web" value
 * @method integer             getPlazasAbiertas()      Returns the current record's "plazas_abiertas" value
 * @method enum                getAceptaInvitaciones()  Returns the current record's "acepta_invitaciones" value
 * @method integer             getTipoId()              Returns the current record's "tipo_id" value
 * @method tdhAsociacionTipo   getTipo()                Returns the current record's "Tipo" value
 * @method Doctrine_Collection getSocios()              Returns the current record's "Socios" collection
 * @method Doctrine_Collection getInvitaciones()        Returns the current record's "Invitaciones" collection
 * @method tdhAsociacion       setId()                  Sets the current record's "id" value
 * @method tdhAsociacion       setNombre()              Sets the current record's "nombre" value
 * @method tdhAsociacion       setNumSocios()           Sets the current record's "num_socios" value
 * @method tdhAsociacion       setDireccion()           Sets the current record's "direccion" value
 * @method tdhAsociacion       setLocalidad()           Sets the current record's "localidad" value
 * @method tdhAsociacion       setRegion()              Sets the current record's "region" value
 * @method tdhAsociacion       setPais()                Sets the current record's "pais" value
 * @method tdhAsociacion       setWeb()                 Sets the current record's "web" value
 * @method tdhAsociacion       setPlazasAbiertas()      Sets the current record's "plazas_abiertas" value
 * @method tdhAsociacion       setAceptaInvitaciones()  Sets the current record's "acepta_invitaciones" value
 * @method tdhAsociacion       setTipoId()              Sets the current record's "tipo_id" value
 * @method tdhAsociacion       setTipo()                Sets the current record's "Tipo" value
 * @method tdhAsociacion       setSocios()              Sets the current record's "Socios" collection
 * @method tdhAsociacion       setInvitaciones()        Sets the current record's "Invitaciones" collection
 * 
 * @package    templodehecate
 * @subpackage model
 * @author     Pablo Floriano <kether@templodehecate.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasetdhAsociacion extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('tdh_asociacion');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('nombre', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             'length' => 255,
             ));
        $this->hasColumn('num_socios', 'integer', 3, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             'length' => 3,
             ));
        $this->hasColumn('direccion', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             'length' => 255,
             ));
        $this->hasColumn('localidad', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             'length' => 255,
             ));
        $this->hasColumn('region', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             'length' => 255,
             ));
        $this->hasColumn('pais', 'string', 50, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             'length' => 50,
             ));
        $this->hasColumn('web', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             'length' => 255,
             ));
        $this->hasColumn('plazas_abiertas', 'integer', 3, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             'length' => 3,
             ));
        $this->hasColumn('acepta_invitaciones', 'enum', null, array(
             'type' => 'enum',
             'notnull' => true,
             'values' => 
             array(
              0 => 'no',
              1 => 'invitaciones',
              2 => 'abierto',
             ),
             'default' => 'no',
             ));
        $this->hasColumn('tipo_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));

        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('tdhAsociacionTipo as Tipo', array(
             'local' => 'tipo_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('ehAuthUser as Socios', array(
             'refClass' => 'tdhAsociacionUsuario',
             'local' => 'asociacion_id',
             'foreign' => 'usuario_id',
             'onDelete' => 'CASCADE',
             'onUpdate' => 'CASCADE'));

        $this->hasMany('tdhAsociacionInvitacion as Invitaciones', array(
             'local' => 'id',
             'foreign' => 'asociacion_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'fields' => 
             array(
              0 => 'nombre',
             ),
             'canUpdate' => true,
             'unique' => true,
             ));
        $ehutilesmarkuptohtmlbehavior0 = new ehUtilesMarkupToHtmlBehavior(array(
             'field' => 'descripcion',
             'target' => 'descripcion_html',
             'parsers' => 
             array(
              'html' => false,
              'markdown' => true,
             ),
             ));
        $this->actAs($timestampable0);
        $this->actAs($sluggable0);
        $this->actAs($ehutilesmarkuptohtmlbehavior0);
    }
}