<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('tdhCritica', 'doctrine');

/**
 * BasetdhCritica
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property boolean $estado_aprobado
 * @property boolean $estado_sin_nota
 * @property boolean $estado_basico
 * @property boolean $capturas_automaticas
 * @property date $fecha_publicacion
 * @property string $autor
 * @property integer $paginas
 * @property string $idioma
 * @property float $precio
 * @property string $moneda
 * @property float $nota
 * @property float $nota_media
 * @property integer $votos
 * @property integer $seccion_id
 * @property integer $editor_id
 * @property integer $hilo_id
 * @property tdhEditor $Editor
 * @property ehForoHilo $Hilo
 * @property tdhSeccion $Seccion
 * @property Doctrine_Collection $Capturas
 * @property Doctrine_Collection $Videos
 * @property Doctrine_Collection $Notas
 * 
 * @method integer             getId()                   Returns the current record's "id" value
 * @method boolean             getEstadoAprobado()       Returns the current record's "estado_aprobado" value
 * @method boolean             getEstadoSinNota()        Returns the current record's "estado_sin_nota" value
 * @method boolean             getEstadoBasico()         Returns the current record's "estado_basico" value
 * @method boolean             getCapturasAutomaticas()  Returns the current record's "capturas_automaticas" value
 * @method date                getFechaPublicacion()     Returns the current record's "fecha_publicacion" value
 * @method string              getAutor()                Returns the current record's "autor" value
 * @method integer             getPaginas()              Returns the current record's "paginas" value
 * @method string              getIdioma()               Returns the current record's "idioma" value
 * @method float               getPrecio()               Returns the current record's "precio" value
 * @method string              getMoneda()               Returns the current record's "moneda" value
 * @method float               getNota()                 Returns the current record's "nota" value
 * @method float               getNotaMedia()            Returns the current record's "nota_media" value
 * @method integer             getVotos()                Returns the current record's "votos" value
 * @method integer             getSeccionId()            Returns the current record's "seccion_id" value
 * @method integer             getEditorId()             Returns the current record's "editor_id" value
 * @method integer             getHiloId()               Returns the current record's "hilo_id" value
 * @method tdhEditor           getEditor()               Returns the current record's "Editor" value
 * @method ehForoHilo          getHilo()                 Returns the current record's "Hilo" value
 * @method tdhSeccion          getSeccion()              Returns the current record's "Seccion" value
 * @method Doctrine_Collection getCapturas()             Returns the current record's "Capturas" collection
 * @method Doctrine_Collection getVideos()               Returns the current record's "Videos" collection
 * @method Doctrine_Collection getNotas()                Returns the current record's "Notas" collection
 * @method tdhCritica          setId()                   Sets the current record's "id" value
 * @method tdhCritica          setEstadoAprobado()       Sets the current record's "estado_aprobado" value
 * @method tdhCritica          setEstadoSinNota()        Sets the current record's "estado_sin_nota" value
 * @method tdhCritica          setEstadoBasico()         Sets the current record's "estado_basico" value
 * @method tdhCritica          setCapturasAutomaticas()  Sets the current record's "capturas_automaticas" value
 * @method tdhCritica          setFechaPublicacion()     Sets the current record's "fecha_publicacion" value
 * @method tdhCritica          setAutor()                Sets the current record's "autor" value
 * @method tdhCritica          setPaginas()              Sets the current record's "paginas" value
 * @method tdhCritica          setIdioma()               Sets the current record's "idioma" value
 * @method tdhCritica          setPrecio()               Sets the current record's "precio" value
 * @method tdhCritica          setMoneda()               Sets the current record's "moneda" value
 * @method tdhCritica          setNota()                 Sets the current record's "nota" value
 * @method tdhCritica          setNotaMedia()            Sets the current record's "nota_media" value
 * @method tdhCritica          setVotos()                Sets the current record's "votos" value
 * @method tdhCritica          setSeccionId()            Sets the current record's "seccion_id" value
 * @method tdhCritica          setEditorId()             Sets the current record's "editor_id" value
 * @method tdhCritica          setHiloId()               Sets the current record's "hilo_id" value
 * @method tdhCritica          setEditor()               Sets the current record's "Editor" value
 * @method tdhCritica          setHilo()                 Sets the current record's "Hilo" value
 * @method tdhCritica          setSeccion()              Sets the current record's "Seccion" value
 * @method tdhCritica          setCapturas()             Sets the current record's "Capturas" collection
 * @method tdhCritica          setVideos()               Sets the current record's "Videos" collection
 * @method tdhCritica          setNotas()                Sets the current record's "Notas" collection
 * 
 * @package    templodehecate
 * @subpackage model
 * @author     Pablo Floriano <kether@templodehecate.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasetdhCritica extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('tdh_critica');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('estado_aprobado', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => true,
             ));
        $this->hasColumn('estado_sin_nota', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => true,
             ));
        $this->hasColumn('estado_basico', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
        $this->hasColumn('capturas_automaticas', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
        $this->hasColumn('fecha_publicacion', 'date', null, array(
             'type' => 'date',
             ));
        $this->hasColumn('autor', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             'length' => 255,
             ));
        $this->hasColumn('paginas', 'integer', 2, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             'length' => 2,
             ));
        $this->hasColumn('idioma', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'default' => 'es',
             'length' => 255,
             ));
        $this->hasColumn('precio', 'float', null, array(
             'type' => 'float',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('moneda', 'string', 3, array(
             'type' => 'string',
             'notnull' => true,
             'default' => 'EUR',
             'length' => 3,
             ));
        $this->hasColumn('nota', 'float', null, array(
             'type' => 'float',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('nota_media', 'float', null, array(
             'type' => 'float',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('votos', 'integer', 2, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             'length' => 2,
             ));
        $this->hasColumn('seccion_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('editor_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('hilo_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));

        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('tdhEditor as Editor', array(
             'local' => 'editor_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('ehForoHilo as Hilo', array(
             'local' => 'hilo_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('tdhSeccion as Seccion', array(
             'local' => 'seccion_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('tdhCriticaCaptura as Capturas', array(
             'local' => 'id',
             'foreign' => 'critica_id'));

        $this->hasMany('tdhCriticaVideo as Videos', array(
             'local' => 'id',
             'foreign' => 'critica_id'));

        $this->hasMany('tdhCriticaNota as Notas', array(
             'local' => 'id',
             'foreign' => 'critica_id'));
    }
}