<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('tdhSorteoParticipante', 'doctrine');

/**
 * BasetdhSorteoParticipante
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $ip
 * @property integer $numero
 * @property string $nombre
 * @property string $token
 * @property string $email
 * @property string $domicilio
 * @property string $comentario
 * @property enum $tipo
 * @property integer $sorteo_id
 * @property tdhSorteo $Sorteo
 * @property Doctrine_Collection $Usuario
 * 
 * @method integer               getId()         Returns the current record's "id" value
 * @method string                getIp()         Returns the current record's "ip" value
 * @method integer               getNumero()     Returns the current record's "numero" value
 * @method string                getNombre()     Returns the current record's "nombre" value
 * @method string                getToken()      Returns the current record's "token" value
 * @method string                getEmail()      Returns the current record's "email" value
 * @method string                getDomicilio()  Returns the current record's "domicilio" value
 * @method string                getComentario() Returns the current record's "comentario" value
 * @method enum                  getTipo()       Returns the current record's "tipo" value
 * @method integer               getSorteoId()   Returns the current record's "sorteo_id" value
 * @method tdhSorteo             getSorteo()     Returns the current record's "Sorteo" value
 * @method Doctrine_Collection   getUsuario()    Returns the current record's "Usuario" collection
 * @method tdhSorteoParticipante setId()         Sets the current record's "id" value
 * @method tdhSorteoParticipante setIp()         Sets the current record's "ip" value
 * @method tdhSorteoParticipante setNumero()     Sets the current record's "numero" value
 * @method tdhSorteoParticipante setNombre()     Sets the current record's "nombre" value
 * @method tdhSorteoParticipante setToken()      Sets the current record's "token" value
 * @method tdhSorteoParticipante setEmail()      Sets the current record's "email" value
 * @method tdhSorteoParticipante setDomicilio()  Sets the current record's "domicilio" value
 * @method tdhSorteoParticipante setComentario() Sets the current record's "comentario" value
 * @method tdhSorteoParticipante setTipo()       Sets the current record's "tipo" value
 * @method tdhSorteoParticipante setSorteoId()   Sets the current record's "sorteo_id" value
 * @method tdhSorteoParticipante setSorteo()     Sets the current record's "Sorteo" value
 * @method tdhSorteoParticipante setUsuario()    Sets the current record's "Usuario" collection
 * 
 * @package    templodehecate
 * @subpackage model
 * @author     Pablo Floriano <kether@templodehecate.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasetdhSorteoParticipante extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('tdh_sorteo_participante');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('ip', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '0.0.0.0',
             'length' => 255,
             ));
        $this->hasColumn('numero', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             'length' => 4,
             ));
        $this->hasColumn('nombre', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             'length' => 255,
             ));
        $this->hasColumn('token', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             'length' => 255,
             ));
        $this->hasColumn('email', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             'length' => 255,
             ));
        $this->hasColumn('domicilio', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             'length' => 255,
             ));
        $this->hasColumn('comentario', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             'length' => 255,
             ));
        $this->hasColumn('tipo', 'enum', null, array(
             'type' => 'enum',
             'notnull' => true,
             'values' => 
             array(
              0 => 'facebook',
              1 => 'twitter',
             ),
             'default' => 'twitter',
             ));
        $this->hasColumn('sorteo_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));


        $this->index('participante', array(
             'fields' => 
             array(
              0 => 'email',
              1 => 'sorteo_id',
              2 => 'token',
             ),
             'type' => 'unique',
             ));
        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('tdhSorteo as Sorteo', array(
             'local' => 'sorteo_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('ehAuthUser as Usuario', array(
             'refClass' => 'tdhSorteoUsuario',
             'local' => 'participante_id',
             'foreign' => 'usuario_id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}