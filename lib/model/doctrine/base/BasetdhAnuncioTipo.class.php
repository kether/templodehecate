<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('tdhAnuncioTipo', 'doctrine');

/**
 * BasetdhAnuncioTipo
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $nombre
 * @property integer $anchura
 * @property integer $altura
 * @property boolean $multiple
 * @property boolean $rotativo
 * @property string $codigo_alternativo
 * @property Doctrine_Collection $Anuncios
 * 
 * @method integer             getId()                 Returns the current record's "id" value
 * @method string              getNombre()             Returns the current record's "nombre" value
 * @method integer             getAnchura()            Returns the current record's "anchura" value
 * @method integer             getAltura()             Returns the current record's "altura" value
 * @method boolean             getMultiple()           Returns the current record's "multiple" value
 * @method boolean             getRotativo()           Returns the current record's "rotativo" value
 * @method string              getCodigoAlternativo()  Returns the current record's "codigo_alternativo" value
 * @method Doctrine_Collection getAnuncios()           Returns the current record's "Anuncios" collection
 * @method tdhAnuncioTipo      setId()                 Sets the current record's "id" value
 * @method tdhAnuncioTipo      setNombre()             Sets the current record's "nombre" value
 * @method tdhAnuncioTipo      setAnchura()            Sets the current record's "anchura" value
 * @method tdhAnuncioTipo      setAltura()             Sets the current record's "altura" value
 * @method tdhAnuncioTipo      setMultiple()           Sets the current record's "multiple" value
 * @method tdhAnuncioTipo      setRotativo()           Sets the current record's "rotativo" value
 * @method tdhAnuncioTipo      setCodigoAlternativo()  Sets the current record's "codigo_alternativo" value
 * @method tdhAnuncioTipo      setAnuncios()           Sets the current record's "Anuncios" collection
 * 
 * @package    templodehecate
 * @subpackage model
 * @author     Pablo Floriano <kether@templodehecate.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasetdhAnuncioTipo extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('tdh_anuncio_tipo');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('nombre', 'string', 128, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 128,
             ));
        $this->hasColumn('anchura', 'integer', 3, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             'length' => 3,
             ));
        $this->hasColumn('altura', 'integer', 3, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             'length' => 3,
             ));
        $this->hasColumn('multiple', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
        $this->hasColumn('rotativo', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
        $this->hasColumn('codigo_alternativo', 'string', 1000, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 1000,
             ));

        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('tdhAnuncio as Anuncios', array(
             'local' => 'id',
             'foreign' => 'tipo_id'));

        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'fields' => 
             array(
              0 => 'nombre',
             ),
             'canUpdate' => true,
             'unique' => true,
             ));
        $this->actAs($sluggable0);
    }
}