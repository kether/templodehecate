<?php

/**
 * tdhAnuncioTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class tdhAnuncioTable extends Doctrine_Table
{
  /**
   * Returns an instance of this class.
   *
   * @return object tdhAnuncioTable
   */
  public static function getInstance()
  {
    return Doctrine_Core::getTable('tdhAnuncio');
  }
  
  /**
   * Filtra los anuncios para que muestre sólo los activos, los permanentes y/o los que están dentro de su parámetro de fechas.
   * 
   * @param string $alias El alias de la tabla tdhAnuncio, "a" por defecto
   */
  public function filtroQuery($alias = 'a')
  {
    $fecha = date('Y-m-d H:i:s');
    
    return $this->createQuery($alias)
      ->innerJoin($alias.'.Tipo t')
      ->addWhere("$alias.activo = ?", true)
      ->addWhere("$alias.temporal = ? OR ($alias.desde <= ? AND $alias.hasta > ?)", array(false, $fecha, $fecha));
  }
  
  /**
   * Devuelve un registro de anuncio aleatorio que esté dentro de los parámetros del filtro.
   * 
   * @param string $slug
   */
  public function retrieveOneRandByTipoSlug($slug)
  {
    return $this->filtroQuery()
      ->select('a.*, t.*, RANDOM() AS rand')
      ->addWhere('t.slug = ?', $slug)
      ->addOrderBy('rand')
      ->fetchOne();
  }
  
  /**
   * Devuelve una colección de resultaros según un tipo de anuncio 
   * 
   * @param string $slug
   */
  public function retrieveListByTipoSlug($slug)
  {
    return $this->filtroQuery()
      ->addWhere('t.slug = ?', $slug)
      ->addOrderBy('a.desde ASC')
      ->execute();
  }
  
  /**
   * @param integer $id
   * @return tdhAnuncio
   */
  public function retrieveOneById($id)
  {
    return $this->createQuery('a')
      ->innerJoin('a.Tipo')
      ->leftJoin('a.Pago')
      ->addWhere('a.id = ?', $id)
      ->fetchOne();
  }
  
  /**
   * Devuelve una colección anuncios de un usuario que los haya pagado.
   * 
   * @param integer $userId
   * @return Doctrine_Collection
   */
  public function retriveListByUserId($userId)
  {
    return $this->createQuery('a')
      ->innerJoin('a.Tipo t')
      ->innerJoin('a.Pago p')
      ->addWhere('p.usuario_id = ?', $userId)
      ->addOrderBy('p.created_at DESC')
      ->execute();
  }
  
  public function retrieveBackendList(Doctrine_Query $q)
  {
    return $q
      ->innerJoin($q->getRootAlias().'.Tipo t');
  }
}