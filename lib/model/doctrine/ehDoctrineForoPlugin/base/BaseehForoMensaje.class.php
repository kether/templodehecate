<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('ehForoMensaje', 'doctrine');

/**
 * BaseehForoMensaje
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property boolean $estado_activo
 * @property boolean $tiene_adjuntos
 * @property boolean $estado_staff
 * @property string $nombre_invitado
 * @property string $ip
 * @property string $asunto
 * @property boolean $html
 * @property boolean $bbcode
 * @property boolean $nl2br
 * @property boolean $emoticonos
 * @property boolean $markdown
 * @property boolean $firma
 * @property integer $karma
 * @property timestamp $visible_desde
 * @property integer $hilo_id
 * @property integer $usuario_id
 * @property ehForoHilo $Hilo
 * @property ehAuthUser $Usuario
 * @property ehForoMensajePrivado $MensajePrivado
 * @property Doctrine_Collection $RegistrosKarma
 * @property Doctrine_Collection $Adjuntos
 * 
 * @method integer              getId()              Returns the current record's "id" value
 * @method boolean              getEstadoActivo()    Returns the current record's "estado_activo" value
 * @method boolean              getTieneAdjuntos()   Returns the current record's "tiene_adjuntos" value
 * @method boolean              getEstadoStaff()     Returns the current record's "estado_staff" value
 * @method string               getNombreInvitado()  Returns the current record's "nombre_invitado" value
 * @method string               getIp()              Returns the current record's "ip" value
 * @method string               getAsunto()          Returns the current record's "asunto" value
 * @method boolean              getHtml()            Returns the current record's "html" value
 * @method boolean              getBbcode()          Returns the current record's "bbcode" value
 * @method boolean              getNl2br()           Returns the current record's "nl2br" value
 * @method boolean              getEmoticonos()      Returns the current record's "emoticonos" value
 * @method boolean              getMarkdown()        Returns the current record's "markdown" value
 * @method boolean              getFirma()           Returns the current record's "firma" value
 * @method integer              getKarma()           Returns the current record's "karma" value
 * @method timestamp            getVisibleDesde()    Returns the current record's "visible_desde" value
 * @method integer              getHiloId()          Returns the current record's "hilo_id" value
 * @method integer              getUsuarioId()       Returns the current record's "usuario_id" value
 * @method ehForoHilo           getHilo()            Returns the current record's "Hilo" value
 * @method ehAuthUser           getUsuario()         Returns the current record's "Usuario" value
 * @method ehForoMensajePrivado getMensajePrivado()  Returns the current record's "MensajePrivado" value
 * @method Doctrine_Collection  getRegistrosKarma()  Returns the current record's "RegistrosKarma" collection
 * @method Doctrine_Collection  getAdjuntos()        Returns the current record's "Adjuntos" collection
 * @method ehForoMensaje        setId()              Sets the current record's "id" value
 * @method ehForoMensaje        setEstadoActivo()    Sets the current record's "estado_activo" value
 * @method ehForoMensaje        setTieneAdjuntos()   Sets the current record's "tiene_adjuntos" value
 * @method ehForoMensaje        setEstadoStaff()     Sets the current record's "estado_staff" value
 * @method ehForoMensaje        setNombreInvitado()  Sets the current record's "nombre_invitado" value
 * @method ehForoMensaje        setIp()              Sets the current record's "ip" value
 * @method ehForoMensaje        setAsunto()          Sets the current record's "asunto" value
 * @method ehForoMensaje        setHtml()            Sets the current record's "html" value
 * @method ehForoMensaje        setBbcode()          Sets the current record's "bbcode" value
 * @method ehForoMensaje        setNl2br()           Sets the current record's "nl2br" value
 * @method ehForoMensaje        setEmoticonos()      Sets the current record's "emoticonos" value
 * @method ehForoMensaje        setMarkdown()        Sets the current record's "markdown" value
 * @method ehForoMensaje        setFirma()           Sets the current record's "firma" value
 * @method ehForoMensaje        setKarma()           Sets the current record's "karma" value
 * @method ehForoMensaje        setVisibleDesde()    Sets the current record's "visible_desde" value
 * @method ehForoMensaje        setHiloId()          Sets the current record's "hilo_id" value
 * @method ehForoMensaje        setUsuarioId()       Sets the current record's "usuario_id" value
 * @method ehForoMensaje        setHilo()            Sets the current record's "Hilo" value
 * @method ehForoMensaje        setUsuario()         Sets the current record's "Usuario" value
 * @method ehForoMensaje        setMensajePrivado()  Sets the current record's "MensajePrivado" value
 * @method ehForoMensaje        setRegistrosKarma()  Sets the current record's "RegistrosKarma" collection
 * @method ehForoMensaje        setAdjuntos()        Sets the current record's "Adjuntos" collection
 * 
 * @package    templodehecate
 * @subpackage model
 * @author     Pablo Floriano <kether@templodehecate.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseehForoMensaje extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('eh_foro_mensaje');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('estado_activo', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => true,
             ));
        $this->hasColumn('tiene_adjuntos', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
        $this->hasColumn('estado_staff', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
        $this->hasColumn('nombre_invitado', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             'length' => 255,
             ));
        $this->hasColumn('ip', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '127.0.0.1',
             'length' => 255,
             ));
        $this->hasColumn('asunto', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             'length' => 255,
             ));
        $this->hasColumn('html', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
        $this->hasColumn('bbcode', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => true,
             ));
        $this->hasColumn('nl2br', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => true,
             ));
        $this->hasColumn('emoticonos', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => true,
             ));
        $this->hasColumn('markdown', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
        $this->hasColumn('firma', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => true,
             ));
        $this->hasColumn('karma', 'integer', 3, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             'length' => 3,
             ));
        $this->hasColumn('visible_desde', 'timestamp', null, array(
             'type' => 'timestamp',
             'notnull' => true,
             ));
        $this->hasColumn('hilo_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('usuario_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));

        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('ehForoHilo as Hilo', array(
             'local' => 'hilo_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('ehAuthUser as Usuario', array(
             'local' => 'usuario_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $this->hasOne('ehForoMensajePrivado as MensajePrivado', array(
             'local' => 'id',
             'foreign' => 'mensaje_id'));

        $this->hasMany('ehForoKarma as RegistrosKarma', array(
             'local' => 'id',
             'foreign' => 'mensaje_id'));

        $this->hasMany('ehForoAdjunto as Adjuntos', array(
             'local' => 'id',
             'foreign' => 'mensaje_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'fields' => 
             array(
              0 => 'asunto',
             ),
             'canUpdate' => true,
             'unique' => true,
             ));
        $ehforomarkuptohtmlbehavior0 = new ehForoMarkupToHtmlBehavior(array(
             'field' => 'cuerpo',
             'target' => 'cuerpo_html',
             'byMethods' => true,
             ));
        $this->actAs($timestampable0);
        $this->actAs($sluggable0);
        $this->actAs($ehforomarkuptohtmlbehavior0);
    }
}