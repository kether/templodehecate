<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('ehForoLeidoTablon', 'doctrine');

/**
 * BaseehForoLeidoTablon
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $usuario_id
 * @property integer $tablon_id
 * @property timestamp $read_at
 * @property ehAuthUser $Usuario
 * @property ehForoTablon $Tablon
 * 
 * @method integer           getUsuarioId()  Returns the current record's "usuario_id" value
 * @method integer           getTablonId()   Returns the current record's "tablon_id" value
 * @method timestamp         getReadAt()     Returns the current record's "read_at" value
 * @method ehAuthUser        getUsuario()    Returns the current record's "Usuario" value
 * @method ehForoTablon      getTablon()     Returns the current record's "Tablon" value
 * @method ehForoLeidoTablon setUsuarioId()  Sets the current record's "usuario_id" value
 * @method ehForoLeidoTablon setTablonId()   Sets the current record's "tablon_id" value
 * @method ehForoLeidoTablon setReadAt()     Sets the current record's "read_at" value
 * @method ehForoLeidoTablon setUsuario()    Sets the current record's "Usuario" value
 * @method ehForoLeidoTablon setTablon()     Sets the current record's "Tablon" value
 * 
 * @package    templodehecate
 * @subpackage model
 * @author     Pablo Floriano <kether@templodehecate.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseehForoLeidoTablon extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('eh_foro_leido_tablon');
        $this->hasColumn('usuario_id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'length' => 4,
             ));
        $this->hasColumn('tablon_id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'length' => 4,
             ));
        $this->hasColumn('read_at', 'timestamp', null, array(
             'type' => 'timestamp',
             'notnull' => true,
             ));

        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('ehAuthUser as Usuario', array(
             'local' => 'usuario_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('ehForoTablon as Tablon', array(
             'local' => 'tablon_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));
    }
}