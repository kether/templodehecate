<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('ehForoPerfil', 'doctrine');

/**
 * BaseehForoPerfil
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property enum $sexo
 * @property date $fecha_nacimiento
 * @property string $nick
 * @property string $uri_avatar
 * @property string $residencia
 * @property string $email
 * @property string $web
 * @property boolean $notificaciones
 * @property integer $num_mensajes
 * @property string $pais
 * @property string $idioma
 * @property string $zona_horaria
 * @property string $firma
 * @property integer $karma
 * @property integer $usuario_id
 * @property string $nombre
 * @property string $apellidos
 * @property boolean $pase_beta
 * @property boolean $boletines
 * @property boolean $sin_publi
 * @property timestamp $sin_publi_hasta
 * @property boolean $botones_sociales
 * @property boolean $foro_a_templo
 * @property string $perfil_facebook
 * @property string $perfil_twitter
 * @property string $perfil_tuenti
 * @property string $perfil_gplus
 * @property string $perfil_paypal
 * @property ehAuthUser $Usuario
 * 
 * @method integer      getId()               Returns the current record's "id" value
 * @method enum         getSexo()             Returns the current record's "sexo" value
 * @method date         getFechaNacimiento()  Returns the current record's "fecha_nacimiento" value
 * @method string       getNick()             Returns the current record's "nick" value
 * @method string       getUriAvatar()        Returns the current record's "uri_avatar" value
 * @method string       getResidencia()       Returns the current record's "residencia" value
 * @method string       getEmail()            Returns the current record's "email" value
 * @method string       getWeb()              Returns the current record's "web" value
 * @method boolean      getNotificaciones()   Returns the current record's "notificaciones" value
 * @method integer      getNumMensajes()      Returns the current record's "num_mensajes" value
 * @method string       getPais()             Returns the current record's "pais" value
 * @method string       getIdioma()           Returns the current record's "idioma" value
 * @method string       getZonaHoraria()      Returns the current record's "zona_horaria" value
 * @method string       getFirma()            Returns the current record's "firma" value
 * @method integer      getKarma()            Returns the current record's "karma" value
 * @method integer      getUsuarioId()        Returns the current record's "usuario_id" value
 * @method string       getNombre()           Returns the current record's "nombre" value
 * @method string       getApellidos()        Returns the current record's "apellidos" value
 * @method boolean      getPaseBeta()         Returns the current record's "pase_beta" value
 * @method boolean      getBoletines()        Returns the current record's "boletines" value
 * @method boolean      getSinPubli()         Returns the current record's "sin_publi" value
 * @method timestamp    getSinPubliHasta()    Returns the current record's "sin_publi_hasta" value
 * @method boolean      getBotonesSociales()  Returns the current record's "botones_sociales" value
 * @method boolean      getForoATemplo()      Returns the current record's "foro_a_templo" value
 * @method string       getPerfilFacebook()   Returns the current record's "perfil_facebook" value
 * @method string       getPerfilTwitter()    Returns the current record's "perfil_twitter" value
 * @method string       getPerfilTuenti()     Returns the current record's "perfil_tuenti" value
 * @method string       getPerfilGplus()      Returns the current record's "perfil_gplus" value
 * @method string       getPerfilPaypal()     Returns the current record's "perfil_paypal" value
 * @method ehAuthUser   getUsuario()          Returns the current record's "Usuario" value
 * @method ehForoPerfil setId()               Sets the current record's "id" value
 * @method ehForoPerfil setSexo()             Sets the current record's "sexo" value
 * @method ehForoPerfil setFechaNacimiento()  Sets the current record's "fecha_nacimiento" value
 * @method ehForoPerfil setNick()             Sets the current record's "nick" value
 * @method ehForoPerfil setUriAvatar()        Sets the current record's "uri_avatar" value
 * @method ehForoPerfil setResidencia()       Sets the current record's "residencia" value
 * @method ehForoPerfil setEmail()            Sets the current record's "email" value
 * @method ehForoPerfil setWeb()              Sets the current record's "web" value
 * @method ehForoPerfil setNotificaciones()   Sets the current record's "notificaciones" value
 * @method ehForoPerfil setNumMensajes()      Sets the current record's "num_mensajes" value
 * @method ehForoPerfil setPais()             Sets the current record's "pais" value
 * @method ehForoPerfil setIdioma()           Sets the current record's "idioma" value
 * @method ehForoPerfil setZonaHoraria()      Sets the current record's "zona_horaria" value
 * @method ehForoPerfil setFirma()            Sets the current record's "firma" value
 * @method ehForoPerfil setKarma()            Sets the current record's "karma" value
 * @method ehForoPerfil setUsuarioId()        Sets the current record's "usuario_id" value
 * @method ehForoPerfil setNombre()           Sets the current record's "nombre" value
 * @method ehForoPerfil setApellidos()        Sets the current record's "apellidos" value
 * @method ehForoPerfil setPaseBeta()         Sets the current record's "pase_beta" value
 * @method ehForoPerfil setBoletines()        Sets the current record's "boletines" value
 * @method ehForoPerfil setSinPubli()         Sets the current record's "sin_publi" value
 * @method ehForoPerfil setSinPubliHasta()    Sets the current record's "sin_publi_hasta" value
 * @method ehForoPerfil setBotonesSociales()  Sets the current record's "botones_sociales" value
 * @method ehForoPerfil setForoATemplo()      Sets the current record's "foro_a_templo" value
 * @method ehForoPerfil setPerfilFacebook()   Sets the current record's "perfil_facebook" value
 * @method ehForoPerfil setPerfilTwitter()    Sets the current record's "perfil_twitter" value
 * @method ehForoPerfil setPerfilTuenti()     Sets the current record's "perfil_tuenti" value
 * @method ehForoPerfil setPerfilGplus()      Sets the current record's "perfil_gplus" value
 * @method ehForoPerfil setPerfilPaypal()     Sets the current record's "perfil_paypal" value
 * @method ehForoPerfil setUsuario()          Sets the current record's "Usuario" value
 * 
 * @package    templodehecate
 * @subpackage model
 * @author     Pablo Floriano <kether@templodehecate.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseehForoPerfil extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('eh_foro_perfil');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('sexo', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'VarÃ³n',
              1 => 'Mujer',
              2 => 'Desconocido',
             ),
             'notnull' => true,
             'default' => 'Desconocido',
             ));
        $this->hasColumn('fecha_nacimiento', 'date', null, array(
             'type' => 'date',
             ));
        $this->hasColumn('nick', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             'length' => 255,
             ));
        $this->hasColumn('uri_avatar', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             'length' => 255,
             ));
        $this->hasColumn('residencia', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             'length' => 255,
             ));
        $this->hasColumn('email', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('web', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             'length' => 255,
             ));
        $this->hasColumn('notificaciones', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => true,
             ));
        $this->hasColumn('num_mensajes', 'integer', 3, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             'length' => 3,
             ));
        $this->hasColumn('pais', 'string', 10, array(
             'type' => 'string',
             'notnull' => true,
             'default' => 'ES',
             'length' => 10,
             ));
        $this->hasColumn('idioma', 'string', 10, array(
             'type' => 'string',
             'notnull' => true,
             'default' => 'es',
             'length' => 10,
             ));
        $this->hasColumn('zona_horaria', 'string', 64, array(
             'type' => 'string',
             'notnull' => true,
             'default' => 'Europe/Madrid',
             'length' => 64,
             ));
        $this->hasColumn('firma', 'string', 1000, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             'length' => 1000,
             ));
        $this->hasColumn('karma', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('usuario_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('nombre', 'string', 128, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             'length' => 128,
             ));
        $this->hasColumn('apellidos', 'string', 128, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             'length' => 128,
             ));
        $this->hasColumn('pase_beta', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
        $this->hasColumn('boletines', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
        $this->hasColumn('sin_publi', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
        $this->hasColumn('sin_publi_hasta', 'timestamp', null, array(
             'type' => 'timestamp',
             'notnull' => true,
             ));
        $this->hasColumn('botones_sociales', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
        $this->hasColumn('foro_a_templo', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => true,
             ));
        $this->hasColumn('perfil_facebook', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             'length' => 255,
             ));
        $this->hasColumn('perfil_twitter', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             'length' => 255,
             ));
        $this->hasColumn('perfil_tuenti', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             'length' => 255,
             ));
        $this->hasColumn('perfil_gplus', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             'length' => 255,
             ));
        $this->hasColumn('perfil_paypal', 'string', 128, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             'length' => 128,
             ));

        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('ehAuthUser as Usuario', array(
             'local' => 'usuario_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             'created' => 
             array(
              'disabled' => true,
             ),
             ));
        $this->actAs($timestampable0);
    }
}