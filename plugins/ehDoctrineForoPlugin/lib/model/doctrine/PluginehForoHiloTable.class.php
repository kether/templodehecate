<?php
/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class PluginehForoHiloTable extends Doctrine_Table
{  
  static function setQueryAutorizados(Doctrine_Query $q)
  {
    $q->addWhere("h.estado_oculto = ?", false)->addWhere("pm.visible_desde <= ?", date('Y-m-d H:i:s'))->addWhere('pm.estado_activo = ?', true);
  }
  
  static function setQueryDesautorizados(Doctrine_Query $q)
  {
    $q->addWhere("h.estado_oculto = ? OR pm.estado_activo = ? OR pm.visible_desde > ?", array(true, false, date('Y-m-d H:i:s')));
  }
  
  static function setQuerySelectMinimo(Doctrine_Query $q)
  {
    $q->select('h.*, t.id, t.nombre, pm.id, pm.asunto, pm.nombre_invitado, pm.created_at, pm.visible_desde, up.id, up.username, pp.id, pp.nick, um.id, um.nombre_invitado, um.created_at, um.visible_desde, uu.id, uu.username, pu.id, pu.nick');
  }
  
  static function setQueryJoin(Doctrine_Query $q)
  {
    $q->leftJoin('h.Tablon t')
      ->leftJoin("h.PrimerMensaje pm")
        ->leftJoin("pm.Usuario up")
        ->leftJoin("up.Perfil pp")
      ->leftJoin("h.UltimoMensaje um")
        ->leftJoin("um.Usuario uu")
        ->leftJoin("uu.Perfil pu");
  }
  
  static function setQueryLeido(Doctrine_Query $q, $usuarioId, $conSelectMinimo = true)
  {
    $q->leftJoin('h.Leidos lh WITH lh.usuario_id = ?', $usuarioId);
    $q->leftJoin('t.Leidos lt WITH lt.usuario_id = ?', $usuarioId);
    
    if($conSelectMinimo)
    {
      $q->addSelect('lh.read_at, lt.read_at');
    }
  }
  
  public function countPorTablonId($tablonId)
  {
    return $this->createQuery('h')->addWhere('h.tablon_id = ?', $tablonId)->count();
  }
  
  public function getAutorizadosPorTablonId($tablonId)
  {
    $q = $this->autorizados()->addWhere('h.tablon_id = ?', $tablonId);
    
    return $q->execute();
  }
  
  public function autorizados()
  {
    $q = $this->createQuery('h');
    
    self::setQueryJoin($q);
    self::setQueryAutorizados($q);
    
    return $q;
  }
  
  public function desautorizados()
  {
    $q = $this->createQuery('h');
    
    self::setQueryJoin($q);
    self::setQueryDesautorizados($q);
    
    return $q;
  }
  
  public function todos()
  {
    $q = $this->createQuery('h');
    self::setQueryJoin($q);
    
    return $q;
  }
  
  public function retrieveAutorizadoPorId($id, $usuarioId = null, $selectMinimo = false)
  {
    $q = $this->autorizados()->addWhere('h.id = ?', $id);
    
    if($selectMinimo)
    {
      self::setQuerySelectMinimo($q);
    }
    
    if(!is_null($usuarioId))
    {
      self::setQueryLeido($q, $usuarioId, $selectMinimo);
    }
    
    return $q->fetchOne();
  }
  
  public function retrieveAutorizados($limit = 5, $filterByTablonId = null)
  {
    $q = $this->autorizados()
      ->limit($limit)
      ->addOrderBy('um.visible_desde DESC')
      ->addOrderBy('um.created_at DESC')
      ->addOrderBy('um.id DESC');
    
    if($filterByTablonId)
    {
      $q->addWhere('h.tablon_id = ?', $filterByTablonId);
    }
    
    self::setQuerySelectMinimo($q);
    
    return $q->execute();
  }
  
  /**
   * Cuenta el número de hilos no autorizados y devuelve el número.
   * 
   * @return integer
   */
  public function countNoAutorizados()
  {
    return $this->desautorizados()->select('h.id')->count();
  }
}