<?php
/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class PluginehForoTablonTable extends Doctrine_Table
{
  static function setQueryAutorizados(Doctrine_Query $q, ehForoSecurityUser $user = null)
  {
    if(($user instanceOf ehForoSecurityUser) && $user->isAuthenticated())
    {
      $q->leftJoin('t.Visibles v WITH v.id = ?', $user->getUserId())
        ->addWhere('t.estado_oculto = ? OR v.id IS NOT NULL', array(false));
    }
    else
    {
      $q->addWhere('t.estado_oculto = ?', false);
    }
  }
  
  public function retrieveSubtablones($tablonId, sfUser $user = null)
  {
    $q = $this->createQuery('t')
      ->addWhere('t.tablon_id = ? AND t.id != ?', array($tablonId, $tablonId))
      ->addOrderBy('t.nombre ASC');
    
    self::setQueryAutorizados($q, $user);
    
    return $q->execute();
  }
  
  public function getEnOrdenPorSeccionId($seccionId, sfUser $user = null, $tablonId = null)
  {
    $q = $this->createQuery('t')
      ->leftJoin('t.UltimoHilo h')
      ->leftJoin('h.PrimerMensaje p')
      ->leftJoin('h.UltimoMensaje u')
      ->leftJoin('u.Usuario usr')
      ->leftJoin('usr.Perfil prf')
      ->addWhere('t.seccion_id = ?', $seccionId)
      ->addOrderBy('t.ordinal DESC')
      ->addOrderBy('t.nombre ASC');
    
    if(($user instanceOf ehForoSecurityUser) && $user->isAuthenticated())
    {
      $q->leftJoin('t.Leidos l WITH l.usuario_id = ?', $user->getUserId());
    }
    
    if($tablonId != null)
    {
      $q->addWhere('t.tablon_id = ? AND t.id != ?', array($tablonId, $tablonId));
    }
    else
    {
      $q->addWhere('t.tablon_id = t.id');
    }
      
    self::setQueryAutorizados($q, $user);
      
    return $q->execute();
  }
  
  public function retrieveAutorizadoPorId($id, ehForoSecurityUser $user = null)
  {
    
    $q = $this->createQuery('t')->where('t.id = ?', $id)->limit(1);
    self::setQueryAutorizados($q, $user);
    
    if(!is_null($user) && $user->isAuthenticated())
    {
      $q->leftJoin('t.Leidos l WITH l.usuario_id = ?', $user->getUserId())
        ->leftJoin('t.UltimoHilo h')
        ->leftJoin('h.UltimoMensaje u');
    }
    
    return $q->fetchOne();
  }
  
  /**
   * Un listado de tablones para el backend con join en la sección
   * 
   * @param Doctrine_Query $q
   * @return Doctrine_Query $q
   */
  public function retrieveBackendList(Doctrine_Query $q)
  {
    return $q->innerJoin($q->getRootAlias().'.Seccion s');
  }
  
  /**
   * Cuenta el número de subtablones de un tablón dado
   * 
   * @param integer $tablonId
   */
  public function numeroDeSubTablones($tablonId)
  {
    $result = $this->createQuery('t')->addWhere('t.tablon_id = ?', $tablonId)->addWhere('t.id != ?', $tablonId)->select('COUNT(t.id) AS cuenta')->fetchOne();
    
    return $result['cuenta'];
  }
  
  public function retrieveArrayFormList(Doctrine_Query $q = null, $addEmpty = true)
  {
    $q = is_null($q) ? $this->createQuery() : $q;
    $rootAlias = $q->getRootAlias();
  
    $r = $q->innerJoin($rootAlias.'.Seccion s')->addOrderBy('s.nombre ASC, '.$rootAlias.'.nombre ASC')->execute();
  
    $secciones = array();
  
    if($addEmpty)
    {
      $tablones[''] = '';
    }
  
    foreach($r as $t)
    {
      $tablones[$t->getSeccion()->getNombre()][$t->getId()] = $t->getNombre();
    }
  
    return $tablones;
  }
}