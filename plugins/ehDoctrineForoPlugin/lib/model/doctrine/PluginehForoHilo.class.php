<?php

/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
abstract class PluginehForoHilo extends BaseehForoHilo
{  
  protected $isDeleted = false;
  
  public function getAsunto()
  {
    return $this->getPrimerMensaje()->getAsunto();
  }
  
  /**
   * Comprueba si el último y prmier mensaje de son el mismo en el hilo.
   * 
   * @return boolean
   */
  public function isPrimeroIgualUltimo()
  {
    return $this->getPrimerMensajeId() == $this->getUltimoMensajeId();
  }
  
  public function getAutor()
  {
    return $this->getPrimerMensaje()->getNick();
  }
  
  public function recalculaRespuestas(Doctrine_Connection $conn = null)
  {
    $this->setRespuestas(
      Doctrine_Query::create($conn)
      ->from('ehForoMensaje')
      ->where('hilo_id = ?', $this->getId())
      ->addWhere('id != '.$this->getPrimerMensajeId())
      ->count()
    );
  }
  
  public function incrementaNumLecturas(Doctrine_Connection $conn = null)
  {
    $this->setLeido($this->getLeido()+1);
    $this->save($conn);
  }
  
  public function leidoPorUsuarioId($usuarioId, Doctrine_Connection $conn = null)
  {
    if(!$this->esLeido())
    {
      if($this->existeAlgunHiloNoLeido($usuarioId))
      {
        if($this->getPrimerLeido())
        {
          $leido = $this->getPrimerLeido();
        }
        else
        {
          $leido = new ehForoLeidoHilo();
          $leido->setUsuarioId($usuarioId);
          $leido->setHiloId($this->getId());
        }
      }
      else
      {
        // ¿No funciona?
        // Doctrine_Query::create($conn)->from('ehForoLeidoHilo lh')->leftJoin('lh.ehForoHilo h')->where('lh.usuario_id = ?', $usuarioId)->where('h.tablon_id = ?', $this->getTablonId())->delete();  
        if($this->getPrimerLeidoTablon())
        {
          $leido = $this->getPrimerLeidoTablon();
        }
        else
        {
          $leido = new ehForoLeidoTablon();
          $leido->setUsuarioId($usuarioId);
          $leido->setTablonId($this->getTablonId());
        }
      }
      
      $leido->setReadAt(date('Y-m-d H:i:s'));
      $leido->save($conn);
    }
  }
  
  protected function existeAlgunHiloNoLeido($usuarioId, Doctrine_Connection $conn = null)
  {
    $q = Doctrine_Query::create($conn)->from('ehForoHilo h')
      ->innerJoin('h.UltimoMensaje um')
      ->leftJoin('h.Leidos lh WITH lh.usuario_id = ?', $usuarioId)
      ->where('h.tablon_id = ?', $this->getTablonId())
      ->addWhere('h.id != ?', $this->getId());

    if($this->getPrimerLeidoTablon())
    {
      $q->addWhere('lh.read_at < um.created_at');
      $q->addWhere('lh.read_at IS NULL OR um.created_at > ?', $this->getPrimerLeidoTablon()->getReadAt());
    }
    else
    {
      $q->addWhere('lh.read_at < um.created_at OR lh.read_at IS NULL');
    }
    
    return $q->count() > 0 ? true : false;
  }
  
  public function getPrimerLeido()
  {
    try
    {
      return isset($this->Leidos) ? $this->getLeidos()->getFirst() : null;
    }
    catch(Doctrine_Exception $e)
    {
      return null;
    }
  }
  
  public function getPrimerLeidoTablon()
  {
    try
    {
      return isset($this->getTablon()->Leidos) ? $this->getTablon()->getLeidos()->getFirst() : null;
    }
    catch(Doctrine_Exception $e)
    {
      return null;
    }
  }
  
  public function esLeido()
  {
    if($this->getPrimerLeidoTablon())
    {
      return $this->getPrimerLeidoTablon()->getReadAt() >= $this->getUltimoMensaje()->getFechaPublicacion('Y-m-d H:i:s') ? true : false;
    }
    if($this->getPrimerLeido())
    {      
      return $this->getPrimerLeido()->getReadAt() >= $this->getUltimoMensaje()->getFechaPublicacion('Y-m-d H:i:s') ? true : false;
    }
    else
    {
      return false;
    }
  }
  
  /**
   * Devuelve un objeto sfDoctrinePager con el resultado de los registros de mensajes del hilo según la página y la configuración en ehForoConfig:
   *  * posts_por_pagina:  Número de mensajes (incluyendo el post del asunto) por página
   *  * links_posts_por_pagina: Número de links a las páginas a mostrar como máximo cuando haya demasiados registros
   * 
   * @param integer $pagina La página que se desea mostrar que por defecto es 1
   * @param array $opciones Un array de opciones
   * @return sfDoctrinePager Un objeto sfDoctrinePager
   */
  public function getPagerMensajes($pagina = 1, $opciones = array())
  {
    $pager = new sfDoctrinePager('ehForoMensaje', ehForoConfig::getStatic('posts_por_pagina'));
    $pager->setPage($pagina);
    $pager->setTableMethod('autorizados');
    $pager->setParameter('links', ehForoConfig::getStatic('links_posts_por_pagina'));
    
    $q = $pager->getQuery();
    
    $q->addWhere('m.hilo_id = ?', $this->getId())
      ->addOrderBy('m.visible_desde ASC, m.created_at ASC, m.id ASC');
    
    /*
    if(isset($opciones['invitante_id']) && !is_null($opciones['invitante_id']))
    {
      $q->leftJoin('u.Invitantes inv WITH inv.invitante_id = ?', $opciones['invitante_id']);
    }
    */
    
    $pager->init();
    
    return $pager;
  }
  
  public function searchAndSetMensajes($deleteIfNoMensajes = true)
  {
    $primerMensaje = Doctrine::getTable('ehForoMensaje')->createQuery()->where('hilo_id = ?', $this->getId())->orderBy('created_at ASC')->fetchOne();
    
    if($primerMensaje)
    {
      $ultimoMensaje = Doctrine::getTable('ehForoMensaje')->createQuery()->where('hilo_id = ?', $this->getId())->orderBy('created_at DESC')->fetchOne();
      
      $this->setPrimerMensaje($primerMensaje);
      $this->setUltimoMensaje($ultimoMensaje);
      
      $this->save();
    }
    elseif($deleteIfNoMensajes)
    {
      $this->delete();
    }
  }
  
  public function isDeleted()
  {
    return $this->isDeleted;
  }
  
  /**
   * Devuelve la última página del hilo en función de la variable "posts_por_pagina" de la configuración del foro.
   * 
   * @return integer
   */
  public function getUltimaPagina()
  {
    return ceil(($this->getRespuestas() + 1) / ehForoConfig::getStatic('posts_por_pagina'));
  }
  
  public function preSave($event)
  {
    if($this->getPrimerMensajeId())
    {
      // Si sólo hay un mensaje, el primer y último mensaje es el mismo
      if($this->getUltimoMensajeId() == null)
      {
        $this->setUltimoMensajeId($this->getPrimerMensajeId());
      }
      
      // Activamos y desactivamos el estado activo del hilo en función del de el mensaje
      if($this->getPrimerMensaje()->getEstadoActivo() == false)
      {
        $this->setEstadoOculto(true);
      }
      else
      {
        $this->setEstadoOculto(false);
      }
    }
  }
  
  public function postInsert($event)
  {
    $qt = Doctrine_Query::create()->update('ehForoTablon')
      ->where('id = ?', $this->getTablonId())
      ->set('num_hilos', 'num_hilos + 1');
    
    // Comprobamos si el mensaje es visible para poder anotarlo en tablones como último mensaje
    if(!$this->getEstadoOculto() && !$this->getPrimerMensajeId() && $this->getPrimerMensaje()->getEstadoActivo() && $this->getPrimerMensaje()->getVisibleDesde() <= date('Y-m-d H:i:s'))
    {
      $qt->set('ultimo_hilo_id', $this->getId());
    }
    
    $qt->execute();
  }
  
  public function postSave($event)
  {
    // Esta corrección sirve para añadir el hiloId a los mensajes de los fixtures
    if($this->PrimerMensaje)
    {
      if($this->getPrimerMensaje()->getHiloId() == null)
      {
        $this->getPrimerMensaje()->setHiloId($this->getId());
      }
    }
  }
  
  public function postDelete($event)
  {
    
    /*
    Doctrine_Query::create()
      ->update('ehForoTablon')
      ->where('tablon_id = ?', $this->getTablonId())
      ->set('num_hilos', 'num_hilos - 1')
      ->set('num_mensajes', 'num_mensajes - ?', $this->getRespuestas())
      ->execute();
    */
    
    // Reducimos el número de hilos del tablón en uno y el número de mensajes en el número de respuestas que quedaran en el hilo
    $this->getTablon()
      ->setNumHilos($this->getTablon()->getNumHilos() - 1)
      ->setNumMensajes($this->getTablon()->getNumMensajes() - $this->getRespuestas())
      ->searchAndSetHilos();
      
    $this->isDeleted = true;
  }
}